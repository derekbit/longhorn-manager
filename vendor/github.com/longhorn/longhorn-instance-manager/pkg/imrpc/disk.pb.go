// Code generated by protoc-gen-go. DO NOT EDIT.
// source: disk.proto

package imrpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReplicaMode int32

const (
	ReplicaMode_WO  ReplicaMode = 0
	ReplicaMode_RW  ReplicaMode = 1
	ReplicaMode_ERR ReplicaMode = 2
)

var ReplicaMode_name = map[int32]string{
	0: "WO",
	1: "RW",
	2: "ERR",
}

var ReplicaMode_value = map[string]int32{
	"WO":  0,
	"RW":  1,
	"ERR": 2,
}

func (x ReplicaMode) String() string {
	return proto.EnumName(ReplicaMode_name, int32(x))
}

func (ReplicaMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{0}
}

type Disk struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Path                 string   `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	TotalSize            int64    `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	FreeSize             int64    `protobuf:"varint,6,opt,name=free_size,json=freeSize,proto3" json:"free_size,omitempty"`
	TotalBlocks          int64    `protobuf:"varint,7,opt,name=total_blocks,json=totalBlocks,proto3" json:"total_blocks,omitempty"`
	FreeBlocks           int64    `protobuf:"varint,8,opt,name=free_blocks,json=freeBlocks,proto3" json:"free_blocks,omitempty"`
	BlockSize            int64    `protobuf:"varint,9,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	ClusterSize          int64    `protobuf:"varint,10,opt,name=cluster_size,json=clusterSize,proto3" json:"cluster_size,omitempty"`
	Readonly             bool     `protobuf:"varint,11,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Disk) Reset()         { *m = Disk{} }
func (m *Disk) String() string { return proto.CompactTextString(m) }
func (*Disk) ProtoMessage()    {}
func (*Disk) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{0}
}

func (m *Disk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Disk.Unmarshal(m, b)
}
func (m *Disk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Disk.Marshal(b, m, deterministic)
}
func (m *Disk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Disk.Merge(m, src)
}
func (m *Disk) XXX_Size() int {
	return xxx_messageInfo_Disk.Size(m)
}
func (m *Disk) XXX_DiscardUnknown() {
	xxx_messageInfo_Disk.DiscardUnknown(m)
}

var xxx_messageInfo_Disk proto.InternalMessageInfo

func (m *Disk) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Disk) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Disk) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Disk) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Disk) GetTotalSize() int64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *Disk) GetFreeSize() int64 {
	if m != nil {
		return m.FreeSize
	}
	return 0
}

func (m *Disk) GetTotalBlocks() int64 {
	if m != nil {
		return m.TotalBlocks
	}
	return 0
}

func (m *Disk) GetFreeBlocks() int64 {
	if m != nil {
		return m.FreeBlocks
	}
	return 0
}

func (m *Disk) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *Disk) GetClusterSize() int64 {
	if m != nil {
		return m.ClusterSize
	}
	return 0
}

func (m *Disk) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type Replica struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	BdevName             string   `protobuf:"bytes,3,opt,name=bdev_name,json=bdevName,proto3" json:"bdev_name,omitempty"`
	LvstoreUuid          string   `protobuf:"bytes,4,opt,name=lvstore_uuid,json=lvstoreUuid,proto3" json:"lvstore_uuid,omitempty"`
	TotalSize            int64    `protobuf:"varint,5,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	TotalBlocks          int64    `protobuf:"varint,6,opt,name=total_blocks,json=totalBlocks,proto3" json:"total_blocks,omitempty"`
	BlockSize            int64    `protobuf:"varint,7,opt,name=block_size,json=blockSize,proto3" json:"block_size,omitempty"`
	Port                 int32    `protobuf:"varint,9,opt,name=port,proto3" json:"port,omitempty"`
	State                string   `protobuf:"bytes,10,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Replica) Reset()         { *m = Replica{} }
func (m *Replica) String() string { return proto.CompactTextString(m) }
func (*Replica) ProtoMessage()    {}
func (*Replica) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{1}
}

func (m *Replica) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Replica.Unmarshal(m, b)
}
func (m *Replica) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Replica.Marshal(b, m, deterministic)
}
func (m *Replica) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Replica.Merge(m, src)
}
func (m *Replica) XXX_Size() int {
	return xxx_messageInfo_Replica.Size(m)
}
func (m *Replica) XXX_DiscardUnknown() {
	xxx_messageInfo_Replica.DiscardUnknown(m)
}

var xxx_messageInfo_Replica proto.InternalMessageInfo

func (m *Replica) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Replica) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Replica) GetBdevName() string {
	if m != nil {
		return m.BdevName
	}
	return ""
}

func (m *Replica) GetLvstoreUuid() string {
	if m != nil {
		return m.LvstoreUuid
	}
	return ""
}

func (m *Replica) GetTotalSize() int64 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

func (m *Replica) GetTotalBlocks() int64 {
	if m != nil {
		return m.TotalBlocks
	}
	return 0
}

func (m *Replica) GetBlockSize() int64 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *Replica) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Replica) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type Engine struct {
	Name                 string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uuid                 string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Size                 uint64                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Address              string                 `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	ReplicaAddressMap    map[string]string      `protobuf:"bytes,5,rep,name=replica_address_map,json=replicaAddressMap,proto3" json:"replica_address_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ReplicaModeMap       map[string]ReplicaMode `protobuf:"bytes,6,rep,name=replica_mode_map,json=replicaModeMap,proto3" json:"replica_mode_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=imrpc.ReplicaMode"`
	Endpoint             string                 `protobuf:"bytes,7,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Frontend             string                 `protobuf:"bytes,8,opt,name=frontend,proto3" json:"frontend,omitempty"`
	FrontendState        string                 `protobuf:"bytes,9,opt,name=frontend_state,json=frontendState,proto3" json:"frontend_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Engine) Reset()         { *m = Engine{} }
func (m *Engine) String() string { return proto.CompactTextString(m) }
func (*Engine) ProtoMessage()    {}
func (*Engine) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{2}
}

func (m *Engine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Engine.Unmarshal(m, b)
}
func (m *Engine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Engine.Marshal(b, m, deterministic)
}
func (m *Engine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Engine.Merge(m, src)
}
func (m *Engine) XXX_Size() int {
	return xxx_messageInfo_Engine.Size(m)
}
func (m *Engine) XXX_DiscardUnknown() {
	xxx_messageInfo_Engine.DiscardUnknown(m)
}

var xxx_messageInfo_Engine proto.InternalMessageInfo

func (m *Engine) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Engine) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Engine) GetSize() uint64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Engine) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Engine) GetReplicaAddressMap() map[string]string {
	if m != nil {
		return m.ReplicaAddressMap
	}
	return nil
}

func (m *Engine) GetReplicaModeMap() map[string]ReplicaMode {
	if m != nil {
		return m.ReplicaModeMap
	}
	return nil
}

func (m *Engine) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Engine) GetFrontend() string {
	if m != nil {
		return m.Frontend
	}
	return ""
}

func (m *Engine) GetFrontendState() string {
	if m != nil {
		return m.FrontendState
	}
	return ""
}

type DiskCreateRequest struct {
	DiskName             string   `protobuf:"bytes,1,opt,name=disk_name,json=diskName,proto3" json:"disk_name,omitempty"`
	DiskPath             string   `protobuf:"bytes,2,opt,name=disk_path,json=diskPath,proto3" json:"disk_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskCreateRequest) Reset()         { *m = DiskCreateRequest{} }
func (m *DiskCreateRequest) String() string { return proto.CompactTextString(m) }
func (*DiskCreateRequest) ProtoMessage()    {}
func (*DiskCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{3}
}

func (m *DiskCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskCreateRequest.Unmarshal(m, b)
}
func (m *DiskCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskCreateRequest.Marshal(b, m, deterministic)
}
func (m *DiskCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskCreateRequest.Merge(m, src)
}
func (m *DiskCreateRequest) XXX_Size() int {
	return xxx_messageInfo_DiskCreateRequest.Size(m)
}
func (m *DiskCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiskCreateRequest proto.InternalMessageInfo

func (m *DiskCreateRequest) GetDiskName() string {
	if m != nil {
		return m.DiskName
	}
	return ""
}

func (m *DiskCreateRequest) GetDiskPath() string {
	if m != nil {
		return m.DiskPath
	}
	return ""
}

type DiskGetRequest struct {
	DiskPath             string   `protobuf:"bytes,1,opt,name=disk_path,json=diskPath,proto3" json:"disk_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiskGetRequest) Reset()         { *m = DiskGetRequest{} }
func (m *DiskGetRequest) String() string { return proto.CompactTextString(m) }
func (*DiskGetRequest) ProtoMessage()    {}
func (*DiskGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{4}
}

func (m *DiskGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiskGetRequest.Unmarshal(m, b)
}
func (m *DiskGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiskGetRequest.Marshal(b, m, deterministic)
}
func (m *DiskGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiskGetRequest.Merge(m, src)
}
func (m *DiskGetRequest) XXX_Size() int {
	return xxx_messageInfo_DiskGetRequest.Size(m)
}
func (m *DiskGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiskGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiskGetRequest proto.InternalMessageInfo

func (m *DiskGetRequest) GetDiskPath() string {
	if m != nil {
		return m.DiskPath
	}
	return ""
}

type ReplicaCreateRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LvstoreUuid          string   `protobuf:"bytes,2,opt,name=lvstore_uuid,json=lvstoreUuid,proto3" json:"lvstore_uuid,omitempty"`
	Size                 int64    `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Address              string   `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaCreateRequest) Reset()         { *m = ReplicaCreateRequest{} }
func (m *ReplicaCreateRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaCreateRequest) ProtoMessage()    {}
func (*ReplicaCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{5}
}

func (m *ReplicaCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaCreateRequest.Unmarshal(m, b)
}
func (m *ReplicaCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaCreateRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaCreateRequest.Merge(m, src)
}
func (m *ReplicaCreateRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaCreateRequest.Size(m)
}
func (m *ReplicaCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaCreateRequest proto.InternalMessageInfo

func (m *ReplicaCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaCreateRequest) GetLvstoreUuid() string {
	if m != nil {
		return m.LvstoreUuid
	}
	return ""
}

func (m *ReplicaCreateRequest) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ReplicaCreateRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ReplicaGetRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LvstoreUuid          string   `protobuf:"bytes,2,opt,name=lvstore_uuid,json=lvstoreUuid,proto3" json:"lvstore_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaGetRequest) Reset()         { *m = ReplicaGetRequest{} }
func (m *ReplicaGetRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaGetRequest) ProtoMessage()    {}
func (*ReplicaGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{6}
}

func (m *ReplicaGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaGetRequest.Unmarshal(m, b)
}
func (m *ReplicaGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaGetRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaGetRequest.Merge(m, src)
}
func (m *ReplicaGetRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaGetRequest.Size(m)
}
func (m *ReplicaGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaGetRequest proto.InternalMessageInfo

func (m *ReplicaGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaGetRequest) GetLvstoreUuid() string {
	if m != nil {
		return m.LvstoreUuid
	}
	return ""
}

type ReplicaDeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LvstoreUuid          string   `protobuf:"bytes,2,opt,name=lvstore_uuid,json=lvstoreUuid,proto3" json:"lvstore_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplicaDeleteRequest) Reset()         { *m = ReplicaDeleteRequest{} }
func (m *ReplicaDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*ReplicaDeleteRequest) ProtoMessage()    {}
func (*ReplicaDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{7}
}

func (m *ReplicaDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaDeleteRequest.Unmarshal(m, b)
}
func (m *ReplicaDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaDeleteRequest.Marshal(b, m, deterministic)
}
func (m *ReplicaDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaDeleteRequest.Merge(m, src)
}
func (m *ReplicaDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_ReplicaDeleteRequest.Size(m)
}
func (m *ReplicaDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaDeleteRequest proto.InternalMessageInfo

func (m *ReplicaDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReplicaDeleteRequest) GetLvstoreUuid() string {
	if m != nil {
		return m.LvstoreUuid
	}
	return ""
}

type ReplicaListResponse struct {
	Replicas             map[string]*Replica `protobuf:"bytes,1,rep,name=replicas,proto3" json:"replicas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReplicaListResponse) Reset()         { *m = ReplicaListResponse{} }
func (m *ReplicaListResponse) String() string { return proto.CompactTextString(m) }
func (*ReplicaListResponse) ProtoMessage()    {}
func (*ReplicaListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{8}
}

func (m *ReplicaListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplicaListResponse.Unmarshal(m, b)
}
func (m *ReplicaListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplicaListResponse.Marshal(b, m, deterministic)
}
func (m *ReplicaListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplicaListResponse.Merge(m, src)
}
func (m *ReplicaListResponse) XXX_Size() int {
	return xxx_messageInfo_ReplicaListResponse.Size(m)
}
func (m *ReplicaListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplicaListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReplicaListResponse proto.InternalMessageInfo

func (m *ReplicaListResponse) GetReplicas() map[string]*Replica {
	if m != nil {
		return m.Replicas
	}
	return nil
}

type EngineCreateRequest struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	VolumeName           string            `protobuf:"bytes,2,opt,name=volume_name,json=volumeName,proto3" json:"volume_name,omitempty"`
	Address              string            `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	ReplicaAddressMap    map[string]string `protobuf:"bytes,4,rep,name=replica_address_map,json=replicaAddressMap,proto3" json:"replica_address_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Frontend             string            `protobuf:"bytes,5,opt,name=frontend,proto3" json:"frontend,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EngineCreateRequest) Reset()         { *m = EngineCreateRequest{} }
func (m *EngineCreateRequest) String() string { return proto.CompactTextString(m) }
func (*EngineCreateRequest) ProtoMessage()    {}
func (*EngineCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{9}
}

func (m *EngineCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineCreateRequest.Unmarshal(m, b)
}
func (m *EngineCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineCreateRequest.Marshal(b, m, deterministic)
}
func (m *EngineCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineCreateRequest.Merge(m, src)
}
func (m *EngineCreateRequest) XXX_Size() int {
	return xxx_messageInfo_EngineCreateRequest.Size(m)
}
func (m *EngineCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineCreateRequest proto.InternalMessageInfo

func (m *EngineCreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EngineCreateRequest) GetVolumeName() string {
	if m != nil {
		return m.VolumeName
	}
	return ""
}

func (m *EngineCreateRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *EngineCreateRequest) GetReplicaAddressMap() map[string]string {
	if m != nil {
		return m.ReplicaAddressMap
	}
	return nil
}

func (m *EngineCreateRequest) GetFrontend() string {
	if m != nil {
		return m.Frontend
	}
	return ""
}

type EngineDeleteRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineDeleteRequest) Reset()         { *m = EngineDeleteRequest{} }
func (m *EngineDeleteRequest) String() string { return proto.CompactTextString(m) }
func (*EngineDeleteRequest) ProtoMessage()    {}
func (*EngineDeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{10}
}

func (m *EngineDeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineDeleteRequest.Unmarshal(m, b)
}
func (m *EngineDeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineDeleteRequest.Marshal(b, m, deterministic)
}
func (m *EngineDeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineDeleteRequest.Merge(m, src)
}
func (m *EngineDeleteRequest) XXX_Size() int {
	return xxx_messageInfo_EngineDeleteRequest.Size(m)
}
func (m *EngineDeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineDeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineDeleteRequest proto.InternalMessageInfo

func (m *EngineDeleteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EngineGetRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EngineGetRequest) Reset()         { *m = EngineGetRequest{} }
func (m *EngineGetRequest) String() string { return proto.CompactTextString(m) }
func (*EngineGetRequest) ProtoMessage()    {}
func (*EngineGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{11}
}

func (m *EngineGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineGetRequest.Unmarshal(m, b)
}
func (m *EngineGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineGetRequest.Marshal(b, m, deterministic)
}
func (m *EngineGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineGetRequest.Merge(m, src)
}
func (m *EngineGetRequest) XXX_Size() int {
	return xxx_messageInfo_EngineGetRequest.Size(m)
}
func (m *EngineGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EngineGetRequest proto.InternalMessageInfo

func (m *EngineGetRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type EngineListResponse struct {
	Engines              map[string]*Engine `protobuf:"bytes,1,rep,name=engines,proto3" json:"engines,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EngineListResponse) Reset()         { *m = EngineListResponse{} }
func (m *EngineListResponse) String() string { return proto.CompactTextString(m) }
func (*EngineListResponse) ProtoMessage()    {}
func (*EngineListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f96b80c5532b4167, []int{12}
}

func (m *EngineListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EngineListResponse.Unmarshal(m, b)
}
func (m *EngineListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EngineListResponse.Marshal(b, m, deterministic)
}
func (m *EngineListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EngineListResponse.Merge(m, src)
}
func (m *EngineListResponse) XXX_Size() int {
	return xxx_messageInfo_EngineListResponse.Size(m)
}
func (m *EngineListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EngineListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EngineListResponse proto.InternalMessageInfo

func (m *EngineListResponse) GetEngines() map[string]*Engine {
	if m != nil {
		return m.Engines
	}
	return nil
}

func init() {
	proto.RegisterEnum("imrpc.ReplicaMode", ReplicaMode_name, ReplicaMode_value)
	proto.RegisterType((*Disk)(nil), "imrpc.Disk")
	proto.RegisterType((*Replica)(nil), "imrpc.Replica")
	proto.RegisterType((*Engine)(nil), "imrpc.Engine")
	proto.RegisterMapType((map[string]string)(nil), "imrpc.Engine.ReplicaAddressMapEntry")
	proto.RegisterMapType((map[string]ReplicaMode)(nil), "imrpc.Engine.ReplicaModeMapEntry")
	proto.RegisterType((*DiskCreateRequest)(nil), "imrpc.DiskCreateRequest")
	proto.RegisterType((*DiskGetRequest)(nil), "imrpc.DiskGetRequest")
	proto.RegisterType((*ReplicaCreateRequest)(nil), "imrpc.ReplicaCreateRequest")
	proto.RegisterType((*ReplicaGetRequest)(nil), "imrpc.ReplicaGetRequest")
	proto.RegisterType((*ReplicaDeleteRequest)(nil), "imrpc.ReplicaDeleteRequest")
	proto.RegisterType((*ReplicaListResponse)(nil), "imrpc.ReplicaListResponse")
	proto.RegisterMapType((map[string]*Replica)(nil), "imrpc.ReplicaListResponse.ReplicasEntry")
	proto.RegisterType((*EngineCreateRequest)(nil), "imrpc.EngineCreateRequest")
	proto.RegisterMapType((map[string]string)(nil), "imrpc.EngineCreateRequest.ReplicaAddressMapEntry")
	proto.RegisterType((*EngineDeleteRequest)(nil), "imrpc.EngineDeleteRequest")
	proto.RegisterType((*EngineGetRequest)(nil), "imrpc.EngineGetRequest")
	proto.RegisterType((*EngineListResponse)(nil), "imrpc.EngineListResponse")
	proto.RegisterMapType((map[string]*Engine)(nil), "imrpc.EngineListResponse.EnginesEntry")
}

func init() { proto.RegisterFile("disk.proto", fileDescriptor_f96b80c5532b4167) }

var fileDescriptor_f96b80c5532b4167 = []byte{
	// 992 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x5b, 0x6f, 0xdc, 0x44,
	0x14, 0xc6, 0xde, 0xab, 0x8f, 0x93, 0xd5, 0x66, 0x52, 0x8a, 0x71, 0x54, 0x35, 0x31, 0x25, 0x5a,
	0x90, 0xba, 0x15, 0x89, 0x84, 0x00, 0x21, 0x41, 0xcb, 0x46, 0x08, 0x4a, 0x00, 0x39, 0x94, 0x3e,
	0xae, 0x9c, 0xf5, 0x49, 0x6a, 0xc5, 0x6b, 0x1b, 0x7b, 0x76, 0xa5, 0x2d, 0xbf, 0x85, 0x07, 0xde,
	0xe0, 0x8d, 0x1f, 0x08, 0x12, 0x9a, 0x33, 0x63, 0xaf, 0x67, 0x2f, 0xa4, 0x40, 0x9f, 0x76, 0xe6,
	0x3b, 0x37, 0x9f, 0xef, 0x7c, 0x73, 0xb4, 0x00, 0x61, 0x54, 0xdc, 0x0c, 0xb3, 0x3c, 0xe5, 0x29,
	0x6b, 0x45, 0xd3, 0x3c, 0x9b, 0xb8, 0x07, 0xd7, 0x69, 0x7a, 0x1d, 0xe3, 0x23, 0x02, 0x2f, 0x67,
	0x57, 0x8f, 0x70, 0x9a, 0xf1, 0x85, 0xf4, 0x71, 0x6d, 0xf2, 0x91, 0x17, 0xef, 0x0f, 0x13, 0x9a,
	0xa3, 0xa8, 0xb8, 0x61, 0x3d, 0x30, 0xa3, 0xd0, 0x31, 0x0e, 0x8d, 0x81, 0xe5, 0x9b, 0x51, 0xc8,
	0x18, 0x34, 0x67, 0xb3, 0x28, 0x74, 0x4c, 0x42, 0xe8, 0x2c, 0xb0, 0x2c, 0xe0, 0x2f, 0x9c, 0x86,
	0xc4, 0xc4, 0x59, 0x60, 0x7c, 0x91, 0xa1, 0xd3, 0x94, 0x98, 0x38, 0xb3, 0x7b, 0x00, 0x3c, 0xe5,
	0x41, 0x3c, 0x2e, 0xa2, 0x97, 0xe8, 0xb4, 0x0e, 0x8d, 0x41, 0xc3, 0xb7, 0x08, 0xb9, 0x88, 0x5e,
	0x22, 0x3b, 0x00, 0xeb, 0x2a, 0x47, 0x94, 0xd6, 0x36, 0x59, 0xbb, 0x02, 0x20, 0xe3, 0x11, 0xec,
	0xc8, 0xd8, 0xcb, 0x38, 0x9d, 0xdc, 0x14, 0x4e, 0x87, 0xec, 0x36, 0x61, 0x4f, 0x08, 0x62, 0xf7,
	0xc1, 0xa6, 0x78, 0xe5, 0xd1, 0x25, 0x0f, 0x10, 0x90, 0x72, 0xb8, 0x07, 0x40, 0x36, 0x59, 0xc1,
	0x92, 0xf5, 0x09, 0x29, 0x4b, 0x4c, 0xe2, 0x59, 0xc1, 0x31, 0x97, 0x0e, 0x20, 0x4b, 0x28, 0x8c,
	0x5c, 0x5c, 0xe8, 0xe6, 0x18, 0x84, 0x69, 0x12, 0x2f, 0x1c, 0xfb, 0xd0, 0x18, 0x74, 0xfd, 0xea,
	0xee, 0xfd, 0x69, 0x40, 0xc7, 0xc7, 0x2c, 0x8e, 0x26, 0x81, 0xe8, 0x3e, 0x09, 0xa6, 0xa8, 0x78,
	0xa3, 0xf3, 0x46, 0xe6, 0x0e, 0xc0, 0xba, 0x0c, 0x71, 0x3e, 0x26, 0x67, 0x49, 0x5f, 0x57, 0x00,
	0xdf, 0x8a, 0x80, 0x23, 0xd8, 0x89, 0xe7, 0x05, 0x4f, 0x73, 0x1c, 0x53, 0xa0, 0xa4, 0xd2, 0x56,
	0xd8, 0x33, 0x11, 0x7f, 0x0b, 0xa3, 0xab, 0xa4, 0xb5, 0xd7, 0x49, 0xd3, 0x39, 0xe9, 0xac, 0x72,
	0x22, 0x46, 0x9b, 0xe6, 0x9c, 0xc8, 0x6a, 0xf9, 0x74, 0x66, 0x77, 0xa0, 0x55, 0xf0, 0x80, 0x4b,
	0x82, 0x2c, 0x5f, 0x5e, 0xbc, 0xbf, 0x1a, 0xd0, 0x3e, 0x4b, 0xae, 0xa3, 0x04, 0x5f, 0xb9, 0x7b,
	0x06, 0x4d, 0xaa, 0x2a, 0x1a, 0x6f, 0xfa, 0x74, 0x66, 0x0e, 0x74, 0x82, 0x30, 0xcc, 0xb1, 0x28,
	0x54, 0xbf, 0xe5, 0x95, 0xfd, 0x00, 0xfb, 0xb9, 0xa4, 0x77, 0xac, 0xa0, 0xf1, 0x34, 0xc8, 0x9c,
	0xd6, 0x61, 0x63, 0x60, 0x9f, 0x3c, 0x18, 0x4a, 0xf5, 0xca, 0x2f, 0x18, 0xaa, 0x39, 0x3c, 0x96,
	0x7e, 0xe7, 0x41, 0x76, 0x96, 0xf0, 0x7c, 0xe1, 0xef, 0xe5, 0xab, 0x38, 0x7b, 0x0a, 0xfd, 0x32,
	0xeb, 0x34, 0x0d, 0x91, 0x52, 0xb6, 0x29, 0xe5, 0xd1, 0xc6, 0x94, 0xe7, 0x69, 0x88, 0x55, 0xbe,
	0x5e, 0xae, 0x81, 0x42, 0x1e, 0x98, 0x84, 0x59, 0x1a, 0x25, 0x9c, 0xa8, 0xb4, 0xfc, 0xea, 0x2e,
	0x6c, 0x57, 0x79, 0x9a, 0x70, 0x4c, 0x42, 0x92, 0xa6, 0xe5, 0x57, 0x77, 0xf6, 0x2e, 0xf4, 0xca,
	0xf3, 0x58, 0x52, 0x6b, 0x91, 0xc7, 0x6e, 0x89, 0x5e, 0x08, 0xd0, 0x1d, 0xc1, 0xdd, 0xcd, 0x8d,
	0xb1, 0x3e, 0x34, 0x6e, 0x70, 0xa1, 0x08, 0x17, 0x47, 0x31, 0xa4, 0x79, 0x10, 0xcf, 0x50, 0x11,
	0x2e, 0x2f, 0x9f, 0x98, 0x1f, 0x19, 0xee, 0x33, 0xd8, 0xdf, 0xd0, 0xcb, 0x86, 0x14, 0x83, 0x7a,
	0x8a, 0xde, 0x09, 0x53, 0x7c, 0xd4, 0x82, 0x6b, 0x69, 0xbd, 0x73, 0xd8, 0x13, 0x0b, 0xe3, 0x8b,
	0x1c, 0x03, 0x8e, 0x3e, 0xfe, 0x34, 0xc3, 0x82, 0x0b, 0x7d, 0x8b, 0x2d, 0x34, 0xae, 0xc9, 0xa1,
	0x2b, 0x00, 0xd2, 0x77, 0x69, 0xa4, 0xdd, 0x61, 0x2e, 0x8d, 0xdf, 0x07, 0xfc, 0x85, 0xf7, 0x10,
	0x7a, 0x22, 0xdd, 0x97, 0xc8, 0x57, 0x73, 0x91, 0xbb, 0xb1, 0xe2, 0xfe, 0x33, 0xdc, 0x51, 0xdf,
	0xa5, 0x7f, 0xc0, 0x26, 0x29, 0xae, 0xbe, 0x2b, 0x73, 0xfd, 0x5d, 0xd5, 0x95, 0xd9, 0xb8, 0x4d,
	0x99, 0xde, 0xd7, 0xb0, 0xa7, 0x8a, 0xd7, 0x3e, 0xf7, 0xbf, 0x55, 0xf6, 0xce, 0xab, 0x46, 0x46,
	0x18, 0xe3, 0xff, 0x6d, 0xc4, 0xfb, 0xcd, 0xa8, 0xa6, 0xfd, 0x4d, 0x54, 0x70, 0x1f, 0x8b, 0x2c,
	0x4d, 0x0a, 0x64, 0x23, 0xb1, 0xc8, 0x08, 0x2e, 0x1c, 0x83, 0xe4, 0x3e, 0xd0, 0xc7, 0x5b, 0xf7,
	0x2e, 0xb1, 0x42, 0xaa, 0xbe, 0x8a, 0x74, 0x9f, 0xc2, 0xae, 0x66, 0xda, 0x20, 0xa2, 0x07, 0x75,
	0x11, 0xd9, 0x27, 0x3d, 0xbd, 0x4a, 0x5d, 0x40, 0xbf, 0x9b, 0xb0, 0x2f, 0xdf, 0xda, 0xed, 0x23,
	0xbc, 0x0f, 0xf6, 0x3c, 0x8d, 0x67, 0x53, 0x94, 0xca, 0x92, 0x8d, 0x83, 0x84, 0x48, 0x5b, 0xb5,
	0x61, 0x35, 0xf4, 0x35, 0x12, 0x6c, 0x5e, 0x23, 0x4d, 0x22, 0xe1, 0x03, 0xed, 0xcd, 0x6b, 0xdf,
	0xf1, 0x2f, 0x76, 0x4a, 0xfd, 0xa9, 0xb7, 0xf4, 0xa7, 0xfe, 0x7a, 0xde, 0xb0, 0xf7, 0x5e, 0x49,
	0xd5, 0xad, 0x22, 0xf1, 0x8e, 0xa1, 0x2f, 0x5d, 0xff, 0x59, 0x9b, 0xde, 0xaf, 0x06, 0x30, 0xe9,
	0xa8, 0x09, 0xe5, 0x73, 0xe8, 0x20, 0xa1, 0xa5, 0x4e, 0x8e, 0x35, 0x8a, 0x34, 0x99, 0x48, 0x48,
	0xa9, 0xa4, 0x0c, 0x73, 0xbf, 0x82, 0x9d, 0xba, 0x61, 0x43, 0x9f, 0xef, 0xe8, 0x1a, 0xd9, 0xd5,
	0x2a, 0xd4, 0xda, 0x7e, 0xff, 0x18, 0xec, 0xda, 0xf6, 0x61, 0x6d, 0x30, 0x9f, 0x7f, 0xd7, 0x7f,
	0x43, 0xfc, 0xfa, 0xcf, 0xfb, 0x06, 0xeb, 0x40, 0xe3, 0xcc, 0xf7, 0xfb, 0xe6, 0xc9, 0x2f, 0x2d,
	0xb0, 0xc5, 0xf6, 0xb8, 0xc0, 0x7c, 0x1e, 0x4d, 0x90, 0x9d, 0x02, 0x2c, 0x77, 0x13, 0x73, 0x54,
	0xfe, 0xb5, 0x75, 0xe5, 0xda, 0x35, 0x0b, 0x7b, 0x08, 0x1d, 0xb5, 0x81, 0xd8, 0x9b, 0x35, 0x7c,
	0x49, 0xa3, 0xee, 0xfe, 0x69, 0xf5, 0x16, 0x54, 0x99, 0x03, 0x5d, 0xea, 0x7a, 0xa5, 0x95, 0x77,
	0xc0, 0x46, 0x55, 0xb4, 0x9c, 0xe8, 0x6a, 0xb4, 0x36, 0x67, 0xf7, 0xee, 0x50, 0xfe, 0x91, 0x1b,
	0x96, 0x7f, 0xe4, 0x86, 0x67, 0xe2, 0x8f, 0x1c, 0xfb, 0x10, 0x60, 0xb9, 0x88, 0xaa, 0x3e, 0xd7,
	0x76, 0xd3, 0x5a, 0xf5, 0xc7, 0x15, 0xaf, 0x62, 0x9e, 0x6c, 0x4b, 0x7a, 0xd7, 0xdd, 0xbe, 0x22,
	0xd8, 0xc7, 0xe5, 0x94, 0x55, 0xf7, 0xee, 0xf6, 0x97, 0xe4, 0xea, 0x03, 0x66, 0x4f, 0xca, 0x50,
	0xd5, 0xba, 0x1e, 0xfa, 0x6a, 0x9d, 0x9f, 0x82, 0x55, 0xa9, 0x9c, 0xbd, 0xa5, 0x25, 0xa8, 0xf5,
	0xbd, 0x52, 0xf8, 0x33, 0x80, 0xa5, 0x8a, 0xb7, 0x76, 0xfd, 0xf6, 0x56, 0xc1, 0x0b, 0xbe, 0x7f,
	0xc4, 0xbc, 0x88, 0xd2, 0x44, 0x94, 0xdd, 0x96, 0xa0, 0x3f, 0x54, 0x4e, 0x65, 0xdc, 0x65, 0x9b,
	0x3c, 0x4e, 0xff, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x81, 0x6c, 0x0a, 0xa3, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DiskServiceClient is the client API for DiskService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DiskServiceClient interface {
	DiskCreate(ctx context.Context, in *DiskCreateRequest, opts ...grpc.CallOption) (*Disk, error)
	DiskGet(ctx context.Context, in *DiskGetRequest, opts ...grpc.CallOption) (*Disk, error)
	ReplicaCreate(ctx context.Context, in *ReplicaCreateRequest, opts ...grpc.CallOption) (*Replica, error)
	ReplicaDelete(ctx context.Context, in *ReplicaDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ReplicaGet(ctx context.Context, in *ReplicaGetRequest, opts ...grpc.CallOption) (*Replica, error)
	ReplicaList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReplicaListResponse, error)
	EngineCreate(ctx context.Context, in *EngineCreateRequest, opts ...grpc.CallOption) (*Engine, error)
	EngineDelete(ctx context.Context, in *EngineDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	EngineGet(ctx context.Context, in *EngineGetRequest, opts ...grpc.CallOption) (*Engine, error)
	EngineList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EngineListResponse, error)
	VersionGet(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error)
}

type diskServiceClient struct {
	cc *grpc.ClientConn
}

func NewDiskServiceClient(cc *grpc.ClientConn) DiskServiceClient {
	return &diskServiceClient{cc}
}

func (c *diskServiceClient) DiskCreate(ctx context.Context, in *DiskCreateRequest, opts ...grpc.CallOption) (*Disk, error) {
	out := new(Disk)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/DiskCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) DiskGet(ctx context.Context, in *DiskGetRequest, opts ...grpc.CallOption) (*Disk, error) {
	out := new(Disk)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/DiskGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) ReplicaCreate(ctx context.Context, in *ReplicaCreateRequest, opts ...grpc.CallOption) (*Replica, error) {
	out := new(Replica)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/ReplicaCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) ReplicaDelete(ctx context.Context, in *ReplicaDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/ReplicaDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) ReplicaGet(ctx context.Context, in *ReplicaGetRequest, opts ...grpc.CallOption) (*Replica, error) {
	out := new(Replica)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/ReplicaGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) ReplicaList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ReplicaListResponse, error) {
	out := new(ReplicaListResponse)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/ReplicaList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) EngineCreate(ctx context.Context, in *EngineCreateRequest, opts ...grpc.CallOption) (*Engine, error) {
	out := new(Engine)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/EngineCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) EngineDelete(ctx context.Context, in *EngineDeleteRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/EngineDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) EngineGet(ctx context.Context, in *EngineGetRequest, opts ...grpc.CallOption) (*Engine, error) {
	out := new(Engine)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/EngineGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) EngineList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*EngineListResponse, error) {
	out := new(EngineListResponse)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/EngineList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *diskServiceClient) VersionGet(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*VersionResponse, error) {
	out := new(VersionResponse)
	err := c.cc.Invoke(ctx, "/imrpc.DiskService/VersionGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DiskServiceServer is the server API for DiskService service.
type DiskServiceServer interface {
	DiskCreate(context.Context, *DiskCreateRequest) (*Disk, error)
	DiskGet(context.Context, *DiskGetRequest) (*Disk, error)
	ReplicaCreate(context.Context, *ReplicaCreateRequest) (*Replica, error)
	ReplicaDelete(context.Context, *ReplicaDeleteRequest) (*empty.Empty, error)
	ReplicaGet(context.Context, *ReplicaGetRequest) (*Replica, error)
	ReplicaList(context.Context, *empty.Empty) (*ReplicaListResponse, error)
	EngineCreate(context.Context, *EngineCreateRequest) (*Engine, error)
	EngineDelete(context.Context, *EngineDeleteRequest) (*empty.Empty, error)
	EngineGet(context.Context, *EngineGetRequest) (*Engine, error)
	EngineList(context.Context, *empty.Empty) (*EngineListResponse, error)
	VersionGet(context.Context, *empty.Empty) (*VersionResponse, error)
}

// UnimplementedDiskServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDiskServiceServer struct {
}

func (*UnimplementedDiskServiceServer) DiskCreate(ctx context.Context, req *DiskCreateRequest) (*Disk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiskCreate not implemented")
}
func (*UnimplementedDiskServiceServer) DiskGet(ctx context.Context, req *DiskGetRequest) (*Disk, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DiskGet not implemented")
}
func (*UnimplementedDiskServiceServer) ReplicaCreate(ctx context.Context, req *ReplicaCreateRequest) (*Replica, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaCreate not implemented")
}
func (*UnimplementedDiskServiceServer) ReplicaDelete(ctx context.Context, req *ReplicaDeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaDelete not implemented")
}
func (*UnimplementedDiskServiceServer) ReplicaGet(ctx context.Context, req *ReplicaGetRequest) (*Replica, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaGet not implemented")
}
func (*UnimplementedDiskServiceServer) ReplicaList(ctx context.Context, req *empty.Empty) (*ReplicaListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReplicaList not implemented")
}
func (*UnimplementedDiskServiceServer) EngineCreate(ctx context.Context, req *EngineCreateRequest) (*Engine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineCreate not implemented")
}
func (*UnimplementedDiskServiceServer) EngineDelete(ctx context.Context, req *EngineDeleteRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineDelete not implemented")
}
func (*UnimplementedDiskServiceServer) EngineGet(ctx context.Context, req *EngineGetRequest) (*Engine, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineGet not implemented")
}
func (*UnimplementedDiskServiceServer) EngineList(ctx context.Context, req *empty.Empty) (*EngineListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EngineList not implemented")
}
func (*UnimplementedDiskServiceServer) VersionGet(ctx context.Context, req *empty.Empty) (*VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VersionGet not implemented")
}

func RegisterDiskServiceServer(s *grpc.Server, srv DiskServiceServer) {
	s.RegisterService(&_DiskService_serviceDesc, srv)
}

func _DiskService_DiskCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiskCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).DiskCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/DiskCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).DiskCreate(ctx, req.(*DiskCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_DiskGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiskGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).DiskGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/DiskGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).DiskGet(ctx, req.(*DiskGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_ReplicaCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).ReplicaCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/ReplicaCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).ReplicaCreate(ctx, req.(*ReplicaCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_ReplicaDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).ReplicaDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/ReplicaDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).ReplicaDelete(ctx, req.(*ReplicaDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_ReplicaGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReplicaGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).ReplicaGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/ReplicaGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).ReplicaGet(ctx, req.(*ReplicaGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_ReplicaList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).ReplicaList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/ReplicaList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).ReplicaList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_EngineCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).EngineCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/EngineCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).EngineCreate(ctx, req.(*EngineCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_EngineDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).EngineDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/EngineDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).EngineDelete(ctx, req.(*EngineDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_EngineGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EngineGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).EngineGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/EngineGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).EngineGet(ctx, req.(*EngineGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_EngineList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).EngineList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/EngineList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).EngineList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DiskService_VersionGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DiskServiceServer).VersionGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/imrpc.DiskService/VersionGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DiskServiceServer).VersionGet(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _DiskService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "imrpc.DiskService",
	HandlerType: (*DiskServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DiskCreate",
			Handler:    _DiskService_DiskCreate_Handler,
		},
		{
			MethodName: "DiskGet",
			Handler:    _DiskService_DiskGet_Handler,
		},
		{
			MethodName: "ReplicaCreate",
			Handler:    _DiskService_ReplicaCreate_Handler,
		},
		{
			MethodName: "ReplicaDelete",
			Handler:    _DiskService_ReplicaDelete_Handler,
		},
		{
			MethodName: "ReplicaGet",
			Handler:    _DiskService_ReplicaGet_Handler,
		},
		{
			MethodName: "ReplicaList",
			Handler:    _DiskService_ReplicaList_Handler,
		},
		{
			MethodName: "EngineCreate",
			Handler:    _DiskService_EngineCreate_Handler,
		},
		{
			MethodName: "EngineDelete",
			Handler:    _DiskService_EngineDelete_Handler,
		},
		{
			MethodName: "EngineGet",
			Handler:    _DiskService_EngineGet_Handler,
		},
		{
			MethodName: "EngineList",
			Handler:    _DiskService_EngineList_Handler,
		},
		{
			MethodName: "VersionGet",
			Handler:    _DiskService_VersionGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "disk.proto",
}
